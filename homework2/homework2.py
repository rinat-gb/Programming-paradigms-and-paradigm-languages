#!/usr/bin/python3
#
# Семинар №2 модуля "Парадигмы программирования и языки парадигм"
#
# Условие:
# На вход подаётся число n
#
# Задача:
# Написать скрипт в любой парадигме, который выводит на экран таблицу умножения
# всех чисел от 1 до n.
#
# Обоснуйте выбор парадигм
# -------------------------------
#
# Ответ:
# При решении данной задачи мной была использована только лишь структурная парадигма,
# что видно по использованию циклов и ветвлений.
#
# Так как в программе нет никаих участков кода, которые требовалось бы использовать
# более одного раза, я не счёл необходимым хоть что-то оборачивать в отдельную или
# отдельные процедуры и поэтому процедурную парадигму я не использовал.
#


print('Задание к семинару №2 модуля "Парадигмы программирования и языки парадигм"\n')

while True:
    n = input("Введите целое число от 1 до 9: ")

    try:
        n = int(n)
    except ValueError:
        print("Вы ввели не целое число, повторите ввод")
        continue

    if 1 <= n <= 9:
        break
    print("Неправильный ввод, число должно быть от 1 до 9 включительно, повторите ввод")

print(f"\nТаблица умножения всех чисел от 1 до {n} на все числа от 1 до {n}:\n")

for i in range(1, n + 1):
    for j in range(1, n + 1):
        print(f"{j} * {i} = {j * i:2} ", end="")
        print("| ", end="") if j != n else print()
